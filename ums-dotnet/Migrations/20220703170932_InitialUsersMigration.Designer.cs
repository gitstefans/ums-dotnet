// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ums_dotnet.DbContexts;

#nullable disable

namespace ums_dotnet.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20220703170932_InitialUsersMigration")]
    partial class InitialUsersMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ums_dotnet.Entities.Authority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Authority");
                });

            modelBuilder.Entity("ums_dotnet.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johnny@depp.com",
                            FirstName = "Johnny",
                            LastName = "Depp",
                            Password = "johnny123",
                            Status = "Active",
                            UserName = "John1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jimm@carrey.com",
                            FirstName = "Jimm",
                            LastName = "Carrey",
                            Password = "Jimm123",
                            Status = "Active",
                            UserName = "Jimm1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "angelina@jolie.com",
                            FirstName = "Angelina",
                            LastName = "Jolie",
                            Password = "angelina123",
                            Status = "Active",
                            UserName = "Angelina1"
                        });
                });

            modelBuilder.Entity("ums_dotnet.Entities.Authority", b =>
                {
                    b.HasOne("ums_dotnet.Entities.User", null)
                        .WithMany("Authority")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ums_dotnet.Entities.User", b =>
                {
                    b.Navigation("Authority");
                });
#pragma warning restore 612, 618
        }
    }
}
